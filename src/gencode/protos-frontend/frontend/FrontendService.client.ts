// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "protos-frontend/frontend/FrontendService.proto" (package "frontend", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { FrontendService } from "./FrontendService";
import type { GetCurrentOnboardingStageResponse } from "../onboarding/rpc";
import type { GetOtherConsentsScreenResponse } from "../onboarding/rpc";
import type { GetBiometricConsentScreenResponse } from "../onboarding/rpc";
import type { TriggerLivenessCheckResponse } from "../onboarding/rpc";
import type { TriggerLivenessCheckRequest } from "../onboarding/rpc";
import type { GetLivenessCheckScreenResponse } from "../onboarding/rpc";
import type { TriggerPanVerificationResponse } from "../onboarding/rpc";
import type { TriggerPanVerificationRequest } from "../onboarding/rpc";
import type { GetPanVerificationScreenResponse } from "../onboarding/rpc";
import type { TriggerEmailVerificationResponse } from "../onboarding/rpc";
import type { TriggerEmailVerificationRequest } from "../onboarding/rpc";
import type { GetEmailVerificationScreenResponse } from "../onboarding/rpc";
import type { TriggerPhoneOTPVerificationResponse } from "../onboarding/rpc";
import type { GetPhoneOTPVerificationScreenResponse } from "../onboarding/rpc";
import type { TriggerPhoneVerificationResponse } from "../onboarding/rpc";
import type { TriggerPhoneOTPVerificationRequest } from "../onboarding/rpc";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetPhoneVerificationScreenResponse } from "../onboarding/rpc";
import type { EmptyRequest } from "../generic/GenericMessages";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Define the service
 *
 * @generated from protobuf service frontend.FrontendService
 */
export interface IFrontendServiceClient {
    /**
     * @generated from protobuf rpc: GetPhoneVerificationScreen(generic.EmptyRequest) returns (onboarding.GetPhoneVerificationScreenResponse);
     */
    getPhoneVerificationScreen(input: EmptyRequest, options?: RpcOptions): UnaryCall<EmptyRequest, GetPhoneVerificationScreenResponse>;
    /**
     * @generated from protobuf rpc: TriggerPhoneVerification(onboarding.TriggerPhoneOTPVerificationRequest) returns (onboarding.TriggerPhoneVerificationResponse);
     */
    triggerPhoneVerification(input: TriggerPhoneOTPVerificationRequest, options?: RpcOptions): UnaryCall<TriggerPhoneOTPVerificationRequest, TriggerPhoneVerificationResponse>;
    /**
     * @generated from protobuf rpc: GetPhoneOTPVerificationScreen(generic.EmptyRequest) returns (onboarding.GetPhoneOTPVerificationScreenResponse);
     */
    getPhoneOTPVerificationScreen(input: EmptyRequest, options?: RpcOptions): UnaryCall<EmptyRequest, GetPhoneOTPVerificationScreenResponse>;
    /**
     * @generated from protobuf rpc: TriggerPhoneOTPVerification(onboarding.TriggerPhoneOTPVerificationRequest) returns (onboarding.TriggerPhoneOTPVerificationResponse);
     */
    triggerPhoneOTPVerification(input: TriggerPhoneOTPVerificationRequest, options?: RpcOptions): UnaryCall<TriggerPhoneOTPVerificationRequest, TriggerPhoneOTPVerificationResponse>;
    /**
     * @generated from protobuf rpc: GetEmailVerificationScreen(generic.EmptyRequest) returns (onboarding.GetEmailVerificationScreenResponse);
     */
    getEmailVerificationScreen(input: EmptyRequest, options?: RpcOptions): UnaryCall<EmptyRequest, GetEmailVerificationScreenResponse>;
    /**
     * @generated from protobuf rpc: TriggerEmailVerification(onboarding.TriggerEmailVerificationRequest) returns (onboarding.TriggerEmailVerificationResponse);
     */
    triggerEmailVerification(input: TriggerEmailVerificationRequest, options?: RpcOptions): UnaryCall<TriggerEmailVerificationRequest, TriggerEmailVerificationResponse>;
    /**
     * @generated from protobuf rpc: GetPanVerificationScreen(generic.EmptyRequest) returns (onboarding.GetPanVerificationScreenResponse);
     */
    getPanVerificationScreen(input: EmptyRequest, options?: RpcOptions): UnaryCall<EmptyRequest, GetPanVerificationScreenResponse>;
    /**
     * @generated from protobuf rpc: TriggerPanVerification(onboarding.TriggerPanVerificationRequest) returns (onboarding.TriggerPanVerificationResponse);
     */
    triggerPanVerification(input: TriggerPanVerificationRequest, options?: RpcOptions): UnaryCall<TriggerPanVerificationRequest, TriggerPanVerificationResponse>;
    /**
     * @generated from protobuf rpc: GetLivenessCheckScreen(generic.EmptyRequest) returns (onboarding.GetLivenessCheckScreenResponse);
     */
    getLivenessCheckScreen(input: EmptyRequest, options?: RpcOptions): UnaryCall<EmptyRequest, GetLivenessCheckScreenResponse>;
    /**
     * @generated from protobuf rpc: TriggerLivenessCheck(onboarding.TriggerLivenessCheckRequest) returns (onboarding.TriggerLivenessCheckResponse);
     */
    triggerLivenessCheck(input: TriggerLivenessCheckRequest, options?: RpcOptions): UnaryCall<TriggerLivenessCheckRequest, TriggerLivenessCheckResponse>;
    /**
     * @generated from protobuf rpc: GetBiometricConsentScreen(generic.EmptyRequest) returns (onboarding.GetBiometricConsentScreenResponse);
     */
    getBiometricConsentScreen(input: EmptyRequest, options?: RpcOptions): UnaryCall<EmptyRequest, GetBiometricConsentScreenResponse>;
    /**
     * @generated from protobuf rpc: GetOtherConsentsScreen(generic.EmptyRequest) returns (onboarding.GetOtherConsentsScreenResponse);
     */
    getOtherConsentsScreen(input: EmptyRequest, options?: RpcOptions): UnaryCall<EmptyRequest, GetOtherConsentsScreenResponse>;
    /**
     * @generated from protobuf rpc: GetCurrentOnboardingStage(generic.EmptyRequest) returns (onboarding.GetCurrentOnboardingStageResponse);
     */
    getCurrentOnboardingStage(input: EmptyRequest, options?: RpcOptions): UnaryCall<EmptyRequest, GetCurrentOnboardingStageResponse>;
}
/**
 * Define the service
 *
 * @generated from protobuf service frontend.FrontendService
 */
export class FrontendServiceClient implements IFrontendServiceClient, ServiceInfo {
    typeName = FrontendService.typeName;
    methods = FrontendService.methods;
    options = FrontendService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetPhoneVerificationScreen(generic.EmptyRequest) returns (onboarding.GetPhoneVerificationScreenResponse);
     */
    getPhoneVerificationScreen(input: EmptyRequest, options?: RpcOptions): UnaryCall<EmptyRequest, GetPhoneVerificationScreenResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<EmptyRequest, GetPhoneVerificationScreenResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TriggerPhoneVerification(onboarding.TriggerPhoneOTPVerificationRequest) returns (onboarding.TriggerPhoneVerificationResponse);
     */
    triggerPhoneVerification(input: TriggerPhoneOTPVerificationRequest, options?: RpcOptions): UnaryCall<TriggerPhoneOTPVerificationRequest, TriggerPhoneVerificationResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<TriggerPhoneOTPVerificationRequest, TriggerPhoneVerificationResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetPhoneOTPVerificationScreen(generic.EmptyRequest) returns (onboarding.GetPhoneOTPVerificationScreenResponse);
     */
    getPhoneOTPVerificationScreen(input: EmptyRequest, options?: RpcOptions): UnaryCall<EmptyRequest, GetPhoneOTPVerificationScreenResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<EmptyRequest, GetPhoneOTPVerificationScreenResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TriggerPhoneOTPVerification(onboarding.TriggerPhoneOTPVerificationRequest) returns (onboarding.TriggerPhoneOTPVerificationResponse);
     */
    triggerPhoneOTPVerification(input: TriggerPhoneOTPVerificationRequest, options?: RpcOptions): UnaryCall<TriggerPhoneOTPVerificationRequest, TriggerPhoneOTPVerificationResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<TriggerPhoneOTPVerificationRequest, TriggerPhoneOTPVerificationResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetEmailVerificationScreen(generic.EmptyRequest) returns (onboarding.GetEmailVerificationScreenResponse);
     */
    getEmailVerificationScreen(input: EmptyRequest, options?: RpcOptions): UnaryCall<EmptyRequest, GetEmailVerificationScreenResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<EmptyRequest, GetEmailVerificationScreenResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TriggerEmailVerification(onboarding.TriggerEmailVerificationRequest) returns (onboarding.TriggerEmailVerificationResponse);
     */
    triggerEmailVerification(input: TriggerEmailVerificationRequest, options?: RpcOptions): UnaryCall<TriggerEmailVerificationRequest, TriggerEmailVerificationResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<TriggerEmailVerificationRequest, TriggerEmailVerificationResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetPanVerificationScreen(generic.EmptyRequest) returns (onboarding.GetPanVerificationScreenResponse);
     */
    getPanVerificationScreen(input: EmptyRequest, options?: RpcOptions): UnaryCall<EmptyRequest, GetPanVerificationScreenResponse> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<EmptyRequest, GetPanVerificationScreenResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TriggerPanVerification(onboarding.TriggerPanVerificationRequest) returns (onboarding.TriggerPanVerificationResponse);
     */
    triggerPanVerification(input: TriggerPanVerificationRequest, options?: RpcOptions): UnaryCall<TriggerPanVerificationRequest, TriggerPanVerificationResponse> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<TriggerPanVerificationRequest, TriggerPanVerificationResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetLivenessCheckScreen(generic.EmptyRequest) returns (onboarding.GetLivenessCheckScreenResponse);
     */
    getLivenessCheckScreen(input: EmptyRequest, options?: RpcOptions): UnaryCall<EmptyRequest, GetLivenessCheckScreenResponse> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<EmptyRequest, GetLivenessCheckScreenResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TriggerLivenessCheck(onboarding.TriggerLivenessCheckRequest) returns (onboarding.TriggerLivenessCheckResponse);
     */
    triggerLivenessCheck(input: TriggerLivenessCheckRequest, options?: RpcOptions): UnaryCall<TriggerLivenessCheckRequest, TriggerLivenessCheckResponse> {
        const method = this.methods[9], opt = this._transport.mergeOptions(options);
        return stackIntercept<TriggerLivenessCheckRequest, TriggerLivenessCheckResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetBiometricConsentScreen(generic.EmptyRequest) returns (onboarding.GetBiometricConsentScreenResponse);
     */
    getBiometricConsentScreen(input: EmptyRequest, options?: RpcOptions): UnaryCall<EmptyRequest, GetBiometricConsentScreenResponse> {
        const method = this.methods[10], opt = this._transport.mergeOptions(options);
        return stackIntercept<EmptyRequest, GetBiometricConsentScreenResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetOtherConsentsScreen(generic.EmptyRequest) returns (onboarding.GetOtherConsentsScreenResponse);
     */
    getOtherConsentsScreen(input: EmptyRequest, options?: RpcOptions): UnaryCall<EmptyRequest, GetOtherConsentsScreenResponse> {
        const method = this.methods[11], opt = this._transport.mergeOptions(options);
        return stackIntercept<EmptyRequest, GetOtherConsentsScreenResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetCurrentOnboardingStage(generic.EmptyRequest) returns (onboarding.GetCurrentOnboardingStageResponse);
     */
    getCurrentOnboardingStage(input: EmptyRequest, options?: RpcOptions): UnaryCall<EmptyRequest, GetCurrentOnboardingStageResponse> {
        const method = this.methods[12], opt = this._transport.mergeOptions(options);
        return stackIntercept<EmptyRequest, GetCurrentOnboardingStageResponse>("unary", this._transport, method, opt, input);
    }
}
